name: Bun CI

on:
  push:
    branches: ["main"]

jobs:
  build:
    name: build
    runs-on: self-hosted
    steps:
      # ...
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@v1

      - run: bun install
      - run: bun run build

      - name: Install pm2
        run: bun install pm2

      - name: Change directory
        run: cd /home/admin/actions-runner/_work/project-studio/project-studio

      - run: pm2 restart 0
# name: Node.js CI

# on:
#   push:
#     branches: ["main"]

# jobs:
#   build:
#     runs-on: self-hosted

#     strategy:
#       matrix:
#         node-version: [20.10.0]

#     steps:
#       - uses: actions/checkout@v4
#       - name: Use Node.js ${{ matrix.node-version }}
#         uses: actions/setup-node@v3
#         with:
#           node-version: ${{ matrix.node-version }}
#           cache: "npm"
#       - run: npm ci
#       - run: npm run build --if-present
#       - run: npm test
# name: Node.js CI

# on:
#   push:
#     branches: ["main"]

# jobs:
#   build:
#     runs-on: self-hosted

#     strategy:
#       matrix:
#         node-version: [20.10.0]

#     steps:
#       - uses: actions/checkout@v4
#       - name: Use Node.js ${{ matrix.node-version }}
#         uses: actions/setup-node@v3
#         with:
#           node-version: ${{ matrix.node-version }}
#           cache: "npm"
#       - run: npm ci
#       - run: npm run build --if-present
#       - name: Change directory
#         run: cd /home/admin/actions-runner/_work/project-studio/project-studio
#       - run: pm2 restart 0
# 2
# name: Linting, testing and building
# on:
#   push:
#     branches: [main]
#     # paths-ignore:
#     #   - '.github/**'
#     #   - '.vscode/**'
# jobs:
#   init-host:
#     name: 1. Load project & Linting
#     runs-on: self-hosted
#     steps:
#       - name: Get repository code
#         uses: actions/checkout@v3
#       - name: Starting Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: 20.10.0
#       - name: Cache Start
#         id: cache-npm
#         uses: actions/cache@v3
#         with:
#           path: node_modules
#           key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
#           restore-keys: |
#             ${{ runner.os }}-node-

#       - name: Install node modules
#         run: npm install
#   build:
#     name: 2. Build production
#     runs-on: self-hosted
#     needs: init-host
#     steps:
#       - name: Get repository code
#         uses: actions/checkout@v3
#       - name: Starting Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: 18.17.0
#       - name: Cache Restore
#         id: cache-npm
#         uses: actions/cache/restore@v3
#         with:
#           path: node_modules
#           key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
#           restore-keys: |
#             ${{ runner.os }}-node-
#           fail-on-cache-miss: true
#       - name: build production project
#         run: npm run build --if-present
#       - name: Change directory
#         run: cd /home/admin/actions-runner/_work/project-studio/project-studio
#       - run: pm2 restart 0
# //2
# name: Linting, testing and building
# on:
#   push:
#     branches: [main]
#     # paths-ignore:
#     #   - '.github/**'
#     #   - '.vscode/**'
# jobs:
#   init-host:
#     name: 1. Load project & Linting
#     runs-on: self-hosted
#     steps:
#       - name: Get repository code
#         uses: actions/checkout@v3
#       - name: Starting Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: 20.10.0
#       - name: Cache Start
#         id: cache-npm
#         uses: actions/cache@v3
#         with:
#           path: node_modules
#           key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
#           restore-keys: |
#             ${{ runner.os }}-node-

#       - name: Install node modules
#         run: npm ci

#       - name: Linting typescript
#         if: always()
#         run: npm run lint
#   build:
#     name: 2. Build production
#     runs-on: ubuntu-latest
#     needs: init-host
#     steps:
#       - name: Get repository code
#         uses: actions/checkout@v3
#       - name: Starting Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: 18.17.0
#       - name: Cache Restore
#         id: cache-npm
#         uses: actions/cache/restore@v3
#         with:
#           path: node_modules
#           key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
#           restore-keys: |
#             ${{ runner.os }}-node-
#           fail-on-cache-miss: true
#       - name: build production project
#         run: npm run build --if-present
#       - name: Change directory
#         run: cd /home/admin/actions-runner/_work/project-studio/project-studio
#       - run: pm2 restart nextjs
