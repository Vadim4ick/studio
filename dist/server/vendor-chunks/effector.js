"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/effector";
exports.ids = ["vendor-chunks/effector"];
exports.modules = {

/***/ "(ssr)/./node_modules/effector/effector.mjs":
/*!********************************************!*\
  !*** ./node_modules/effector/effector.mjs ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   allSettled: () => (/* binding */ C),\n/* harmony export */   attach: () => (/* binding */ v),\n/* harmony export */   clearNode: () => (/* binding */ vt),\n/* harmony export */   combine: () => (/* binding */ g),\n/* harmony export */   createApi: () => (/* binding */ k),\n/* harmony export */   createDomain: () => (/* binding */ w),\n/* harmony export */   createEffect: () => (/* binding */ b),\n/* harmony export */   createEvent: () => (/* binding */ p),\n/* harmony export */   createNode: () => (/* binding */ a),\n/* harmony export */   createStore: () => (/* binding */ h),\n/* harmony export */   createWatch: () => (/* binding */ D),\n/* harmony export */   fork: () => (/* binding */ O),\n/* harmony export */   forward: () => (/* binding */ St),\n/* harmony export */   fromObservable: () => (/* binding */ S),\n/* harmony export */   guard: () => (/* binding */ z),\n/* harmony export */   hydrate: () => (/* binding */ R),\n/* harmony export */   is: () => (/* binding */ ae),\n/* harmony export */   launch: () => (/* binding */ o),\n/* harmony export */   merge: () => (/* binding */ $),\n/* harmony export */   restore: () => (/* binding */ A),\n/* harmony export */   sample: () => (/* binding */ x),\n/* harmony export */   scopeBind: () => (/* binding */ F),\n/* harmony export */   serialize: () => (/* binding */ q),\n/* harmony export */   setGraphInspector: () => (/* binding */ he),\n/* harmony export */   setInspector: () => (/* binding */ ut),\n/* harmony export */   setStoreName: () => (/* binding */ i),\n/* harmony export */   split: () => (/* binding */ j),\n/* harmony export */   step: () => (/* binding */ Te),\n/* harmony export */   version: () => (/* binding */ Et),\n/* harmony export */   withFactory: () => (/* binding */ ke),\n/* harmony export */   withRegion: () => (/* binding */ n)\n/* harmony export */ });\nfunction e(e,t){for(const r in e)t(e[r],r)}function t(e,t){e.forEach(t)}function r(e,t,r){if(!e)throw Error(`${r?r+': ':''}${t}`)}function n(e,t){const r=E(e).meta||{};ge={id:E(e).id,parent:ge,value:e,template:r.template||be(),sidRoot:r.sidRoot||ge&&ge.sidRoot,meta:r};try{return t()}finally{ye('region'),ge=H(ge)}}function a({node:e=[],from:r,source:n,parent:a=r||n,to:o,target:s,child:i=o||s,scope:c={},meta:l={},family:d={type:'regular'},regional:u}={}){const f=Se(a),p=Se(d.links),m=Se(d.owners),h=[];t(e,(e=>e&&ie(h,e)));const g={id:fe(),seq:h,next:Se(i),meta:l,scope:c,family:{type:d.type||\"crosslink\",links:p,owners:m}};return t(p,(e=>ie(V(e),g))),t(m,(e=>ie(T(e),g))),t(f,(e=>ie(e.next,g))),u&&ge&&we(B(ge),[g]),g}function o(e,r,n){let a,o=at,s=null,i=et;if(e.target&&(r=e.params,n=e.defer,a=e.meta,o='page'in e?e.page:o,e.stack&&(s=e.stack),i=U(e)||i,e=e.target),i&&et&&i!==et&&(et=null),Array.isArray(e))for(let t=0;t<e.length;t++)Qe('pure',o,E(e[t]),s,r[t],i,a);else Qe('pure',o,E(e),s,r,i,a);if(n&&!tt)return;const c={isRoot:tt,currentPage:at,scope:et,isWatch:rt,isPure:nt};let l,d,u,f,p,m;tt=0;e:for(;f=Ke();){const{idx:e,stack:r,type:n}=f;u=r.node,at=p=r.page,et=U(r),p?m=p.reg:et&&(m=et.reg);const a=!!p,o=!!et,s={fail:0,scope:u.scope};l=d=0;for(let t=e;t<u.seq.length&&!l;t++){const i=u.seq[t];if(i.order){const{priority:a,barrierID:o}=i.order,s=o?p?`${p.fullID}_${o}`:o:0;if(t!==e||n!==a){o?Ze.has(s)||(Ze.add(s),Xe(t,r,a,o)):Xe(t,r,a,0);continue e}o&&Ze.delete(s)}switch(i.type){case'mov':{const e=i.data;let t;switch(e.from){case'stack':t=B(r);break;case'a':case'b':t=r[e.from];break;case'value':t=e.store;break;case'store':if(m&&!m[e.store.id])if(a){const t=ct(p,e.store.id);r.page=p=t,t?m=t.reg:o?(pt(et,e.store,0,1,e.softRead),m=et.reg):m=void 0}else o&&pt(et,e.store,0,1,e.softRead);t=Be(m&&m[e.store.id]||e.store)}switch(e.to){case'stack':r.value=t;break;case'a':case'b':r[e.to]=t;break;case'store':lt(p,et,e.target,0).current=t}break}case'compute':const e=i.data;if(e.fn){rt='watch'===u.meta.op,nt=e.pure;const t=e.safe?(0,e.fn)(B(r),s.scope,r):mt(s,e.fn,r);e.filter?d=!t:r.value=t,rt=c.isWatch,nt=c.isPure}}l=s.fail||d}if(dt&&dt(r,s),!l){const e=B(r),n=U(r);if(t(u.next,(t=>{Qe('child',p,t,r,e,n)})),n){u.meta.needFxCounter&&Qe('child',p,n.fxCount,r,e,n),u.meta.storeChange&&Qe('child',p,n.storeChange,r,e,n),u.meta.warnSerialize&&Qe('child',p,n.warnSerializeNode,r,e,n);const a=n.additionalLinks[u.id];a&&t(a,(t=>{Qe('child',p,t,r,e,n)}))}}}tt=c.isRoot,at=c.currentPage,et=U(c)}function s(t,r=\"combine\"){let n=r+'(',a='',o=0;return e(t,(e=>{o<25&&(null!=e&&(n+=a,n+=Q(e)?K(e).fullName:e.toString()),o+=1,a=', ')})),n+')'}function i(e,t){e.shortName=t,Object.assign(K(e),c(t,H(e)))}function c(e,t){let r,n;const a=e;if(t){const a=K(t);0===e.length?(r=a.path,n=a.fullName):(r=a.path.concat([e]),n=0===a.fullName.length?e:a.fullName+'/'+e)}else r=0===e.length?[]:[e],n=e;return{shortName:a,fullName:n,path:r}}function l(e,t){if(!t)return e;if(!t.name&&!t.named&&!t.loc)return e;let r=`[${e}]`;const n=t.named||t.name;n&&(r+=` unit '${n}'`);const a=t.loc;return!n&&a&&(r+=` (${a.file}:${a.line}:${a.column})`),r}function d(e,t){const r=t?e:e[0];ze(r);let n=r.or;const a=r.and;if(a){const r=t?a:a[0];if($e(r)&&'and'in r){const r=d(a,t);e=r[0],n={...n,...r[1]}}else e=a}return[e,n]}function u(e){const t=()=>e();return t.unsubscribe=()=>e(),t}function f(e,...t){const r=be();if(r){const n=r.handlers[e];if(n)return n(r,...t)}}function p(e,t){const n=ht({or:t,and:'string'==typeof e?{name:e}:e}),s=l('event',n),i=(e,...t)=>(r(!G(i,'derived'),'call of derived event is not supported, use createEvent instead',s),r(!nt,'unit call from pure function is not supported, use operators like sample instead',s),at?((e,t,r,n)=>{const a=at;let o=null;if(t)for(o=at;o&&o.template!==t;)o=H(o);st(o);const s=e.create(r,n);return st(a),s})(i,c,e,t):i.create(e,t)),c=be(),d=Object.assign(i,{graphite:a({meta:xt(n.actualOp||\"event\",i,n),regional:1}),create:e=>(o({target:i,params:e,scope:et}),e),watch:e=>$t(i,e),map:e=>zt(i,\"map\",e,[Ve()]),filter:e=>zt(i,'filter',e.fn?e:e.fn,[Ve(Oe,1)]),filterMap:e=>zt(i,'filterMap',e,[Ve(),_e((e=>!xe(e)),1)]),prepend(e){r(i.targetable,'.prepend of derived event is not supported, call source event instead',s);const t=p('* \\u2192 '+i.shortName,{parent:H(i)});return f('eventPrepend',E(t)),wt(t,i,[Ve()],'prepend',e),Mt(i,t),t}});return null!=n&&n.domain&&n.domain.hooks.event(d),J(d,'id',d.graphite.id),ye(d.graphite),d}function m(e,n,a,o,s){return je(a,`${s} ${n}`,'first argument'),r(Me(o),'second argument should be a function',s),ce(!G(e,'derived'),`${n} in derived store`,`${n} in store created via createStore`,s),t(Array.isArray(a)?a:[a],(t=>{e.off(t),W(e).set(t,kt(jt(t,e,'on',Ie,o)))})),e}function h(e,n){const s=ht(n),i=Le(e),c=l('store',s),d=p({named:'updates',derived:1});f('storeBase',i);const u=i.id,g='skipVoid'in s,y=g&&!s.skipVoid;ce(!(g&&s.skipVoid),'{skipVoid: true}','updateFilter',c);const b={subscribers:new Map,updates:d,defaultState:e,stateRef:i,getState(){let e,t=i;if(at){let t=at;for(;t&&!t.reg[u];)t=H(t);t&&(e=t)}return!e&&et&&(pt(et,i,1),e=et),e&&(t=e.reg[u]),Be(t)},setState:e=>o({target:b,params:e,defer:1,scope:et}),reset:(...e)=>(r(b.targetable,'.reset of derived store is not supported',c),t(e,(e=>m(b,'.reset',e,(()=>b.defaultState),c))),b),on:(e,t)=>(r(b.targetable,'.on of derived store is not supported',c),m(b,'.on',e,t,c)),off(e){const t=W(b).get(e);return t&&(t(),W(b).delete(e)),b},map(e,t){let r,n;$e(e)&&(r=e,e=e.fn);const a=b.getState(),o=xe(a);be()?n=null:(!o||o&&y)&&(n=e(a));const s=h(n,{name:`${b.shortName} \\u2192 *`,derived:1,...t,and:r}),c=jt(b,s,\"map\",Oe,e);return We(L(s),{type:\"map\",fn:e,from:i}),L(s).noInit=1,f('storeMap',i,c),s},watch(e,t){if(ce(!t,'watch second argument','sample',c),!t||!Q(e)){const t=$t(b,e);return f('storeWatch',i,e)||e(b.getState()),t}return r(Me(t),'second argument should be a function',c),e.watch((e=>t(b.getState(),e)))}},v=xt(\"store\",b,s),k=b.defaultConfig.updateFilter;b.graphite=a({scope:{state:i,fn:k},node:[_e(((e,t,r)=>(r.scope&&!r.scope.reg[i.id]&&(r.b=1),e))),Ee(i),_e(((e,t,{a:r,b:n})=>{const a=xe(e);return a&&!g&&console.error(`${c}: ${At}`),(a&&y||!a)&&(e!==r||n)}),1),k&&Ve(Ne,1),qe({from:\"stack\",target:i})],child:d,meta:{...v,defaultState:e},regional:1}),J(b,'id',b.graphite.id),J(b,'rootStateRefId',u);const w=G(b,'serialize'),S=G(b,'derived'),$='ignore'===w,M=G(b,'sid');M&&(J(b,'storeChange',1),i.sid=M),M||$||S||J(b,'warnSerialize',1);const x=xe(e);return r(S||!x||x&&y,At,c),S&&x&&!g&&console.error(`${c}: ${At}`),we(b,[d]),null!=s&&s.domain&&s.domain.hooks.store(b),S||(b.reinit=p({named:'reinit'}),b.reset(b.reinit)),i.meta=b.graphite.meta,ye(b.graphite),b}function g(...e){let t,n,a;[e,a]=d(e);const o=l('combine',a),s=e[e.length-1],i=e.length>1&&!Y(s)&&$e(s),c=i&&s,u=i?e[e.length-2]:s;let f,p,m;if(Me(u)?(n=e.slice(0,i?-2:-1),t=u):n=e,1===n.length){const e=n[0];Y(e)||(f=e,p=1)}if(!p&&(f=n,t)){m=1;const e=t;t=t=>e(...t)}return r($e(f),`${o}: shape should be an object`),Ct(Array.isArray(f),!m,f,a,t,c)}function y(){const e={};return e.req=new Promise(((t,r)=>{e.rs=t,e.rj=r})),e.req.catch((()=>{})),e}function b(e,t={}){const n=ht(Me(e)?{handler:e}:e,t),s=l('effect',n),i=p(Me(e)?{handler:e}:e,{...t,actualOp:\"effect\"}),c=E(i);J(c,'op',i.kind=\"effect\"),i.use=e=>(r(Me(e),'.use argument should be a function',s),b.scope.handler=e,i),i.use.getCurrent=()=>b.scope.handler;const d=i.finally=p({named:'finally',derived:1}),u=i.done=d.filterMap({named:'done',fn({status:e,params:t,result:r}){if('done'===e)return{params:t,result:r}}}),f=i.fail=d.filterMap({named:'fail',fn({status:e,params:t,error:r}){if('fail'===e)return{params:t,error:r}}}),m=i.doneData=u.map({named:'doneData',fn:({result:e})=>e}),g=i.failData=f.map({named:'failData',fn:({error:e})=>e}),b=a({scope:{handler:i.defaultConfig.handler||(()=>r(0,`no handler used in ${i.compositeName.fullName}`))},node:[_e(((e,t,r)=>{let n=t.handler;const a=U(r);if(a){const e=a.handlers.unitMap.get(i)||a.handlers.sidMap[i.sid];e&&(n=e)}return e.handler=n,e}),0,1),_e(((e,t,r)=>{if(t.runnerFn&&!t.runnerFn(e,null,r))return;const{params:n,req:a,handler:o,args:s=[n]}=e,i=It(n,a,1,d,r),c=It(n,a,0,d,r),[l,u]=Nt(o,c,s);l&&($e(u)&&Me(u.then)?u.then(i,c):i(u))}),0,1)],meta:{op:'fx',fx:'runner'}});c.scope.runner=b,ie(c.seq,_e(((e,{runner:t},r)=>{const n=H(r)?{params:e,req:{rs(e){},rj(e){}}}:e;return r.meta||(r.meta={fxID:pe()}),o({target:t,params:n,defer:1,scope:U(r),meta:r.meta}),n.params}))),i.create=e=>{const t=y(),r={params:e,req:t};if(et&&!rt){const e=et;t.req.finally((()=>{ot(e)})).catch((()=>{}))}return o({target:i,params:r,scope:et}),t.req};const v=i.inFlight=h(0,{serialize:'ignore',named:(G(i,'name')||i.graphite.id)+'.inFlight'}).on(i,(e=>e+1)).on(d,(e=>e-1)).map({fn:e=>e,named:'inFlight'});J(d,'needFxCounter','dec'),J(i,'needFxCounter',1);const k=i.pending=v.map({fn:e=>e>0,named:'pending'});return we(i,[d,u,f,m,g,k,v]),null!=n&&n.domain&&n.domain.hooks.effect(i),i}function v(e){let t;[e,t]=d(e,1);const n=l('attach',t);let{source:a,effect:s,mapParams:i,domain:u}=e;ee(s)&&r(xe(u),'`domain` can only be used with a plain function',n);const f=b(e,t);J(f,'attached',1);const{runner:p}=E(f).scope;let m;const h=(e,t,r)=>{const{params:n,req:s,handler:c}=e,l=f.finally,d=It(n,s,0,l,r),u=r.a,p=ee(c);let m,h=1;if(i?[h,m]=Nt(i,d,[n,u]):m=a&&p?u:n,h){if(!p)return e.args=[u,m],1;o({target:c,params:{params:m,req:{rs:It(n,s,1,l,r),rj:d}},page:r.page,defer:1,meta:r.meta})}};if(a){let e;p.scope.runnerFn=h,Y(a)?(e=a,we(e,[f])):(e=g(a),we(f,[e])),m=[_e((e=>e),0,1),Ee(L(e))],delete p.seq[1].order}else m=[_e(h,1,1)];p.seq.splice(1,0,...m),f.use(s);const y=H(s);return y&&(Object.assign(K(f),c(f.shortName,y)),f.defaultConfig.parent=y),Mt(s,f,\"effect\"),f}function k(...t){let[[r,n],a]=d(t);const o={};return e(n,((e,t)=>{const n=o[t]=p(t,{parent:H(r),config:a});r.on(n,e),Mt(r,n)})),o}function w(r,n){const s=ht({or:n,and:'string'==typeof r?{name:r}:r}),i=a({family:{type:\"domain\"},regional:1,parent:(null==s?void 0:s.domain)||(null==s?void 0:s.parent)}),c={history:{},graphite:i,hooks:{}};i.meta=xt(\"domain\",c,{parent:(null==s?void 0:s.domain)||(null==s?void 0:s.parent),or:{...s,derived:1}}),e({Event:p,Effect:b,Store:h,Domain:w},((e,r)=>{const n=r.toLowerCase(),a=p({named:`on${r}`});c.hooks[n]=a;const s=new Set;c.history[`${n}s`]=s,a.create=e=>(o(a,e),e),ie(E(a).seq,_e(((e,t,r)=>(r.scope=null,e)))),a.watch((e=>{we(c,[e]),s.add(e),e.ownerSet||(e.ownerSet=s),H(e)||(e.parent=c)})),we(c,[a]),c[`onCreate${r}`]=e=>(t(s,e),a.watch(e)),c[`create${r}`]=c[n]=(t,r)=>{const n=ht({and:r,or:t});return null!=n&&n.domain?e(t,r):a(e(t,{parent:c,or:n}))}}));const l=H(c);return l&&e(c.hooks,((e,t)=>wt(e,l.hooks[t]))),null!=s&&s.domain&&s.domain.hooks.domain(c),c}function S(e){ze(e);const t=_ in e?e[_]():e;r(t.subscribe,'expect observable to have .subscribe');const n=p(),a=kt(n);return t.subscribe({next:n,error:a,complete:a}),n}function $(e,t){const r=l('merge',t);je(e,r,'first argument');const n=p({name:s(e,'merge'),derived:1,and:t});return wt(e,n,[],'merge'),n}function M(e,n){let a=0;return t(Rt,(t=>{t in e&&(r(null!=e[t],Ft(n,t)),a=1)})),a}function x(...e){let t,r,n,a,[[o,s,i],c]=d(e),u=1;const f=l('sample',c);return xe(s)&&$e(o)&&M(o,f)&&(s=o.clock,i=o.fn,'batch'in o?u=o.batch:(ce(!('greedy'in o),'greedy in sample','batch',f),u=!o.greedy),a=o.filter,t=o.target,r=o.name,n=o.sid,o=o.source),qt('sample',s,o,a,t,i,r,c,u,1,0,n)}function z(...e){let[[t,r],n]=d(e);const a=l('guard',n);return ce(0,'guard','sample',a),r||(r=t,t=r.source),M(r,a),qt('guard',r.clock,t,r.filter,r.target,null,r.name,n,!r.greedy,0,1)}function A(t,n,a){const o=l('restore',a);if(r(!Y(t),'restore($store) is not supported',o),Z(t)||ee(t)){const e=H(t),r=h(n,{parent:e,name:t.shortName,and:a});return wt(ee(t)?t.doneData:t,r),e&&e.hooks.store(r),r}const s=Array.isArray(t)?[]:{};return e(t,((e,t)=>s[t]=Y(e)?e:h(e,{name:t}))),s}function j(...t){const n='split';let o,s,[[i,c],u]=d(t);const m=l(n,u),h=!c;h&&(o=i.cases,c=i.match,s=i.clock,i=i.source);const g=Y(c),y=!Q(c)&&Me(c),b=!g&&!y&&$e(c);r(Q(i),'source must be a unit',m),o||(o={}),h?e(o,((e,t)=>Ce(m,e,`cases.${t}`))):(r(b,'match should be an object',m),e(c,((e,t)=>o[t]=p({derived:1,named:`cases.${t}`,and:u}))),o.__=p({derived:1,named:'cases.__',and:u}));const v=new Set([].concat(i,s||[],Object.values(o))),k=Object.keys(g||y?o:c);let w;if(g||y)g&&v.add(c),w=[g&&Ee(L(c),0,1),De({safe:g,filter:1,pure:!g,fn(e,t,r){const n=String(g?r.a:c(e));_t(t,oe(k,n)?n:'__',e,r)}})];else if(b){const t=Le({});t.type='shape';const r=[];let n;e(c,((e,a)=>{if(Q(e)){n=1,ie(r,a),v.add(e);const o=wt(e,[],[Ee(t),_e(((e,t,{a:r})=>r[a]=e))]);if(Y(e)){t.current[a]=e.getState();const r=L(e);We(t,{from:r,field:a,type:'field'}),f('splitMatchStore',r,o)}}})),n&&f('splitBase',t),w=[n&&Ee(t,0,1),Ve(((e,t,n)=>{for(let a=0;a<k.length;a++){const o=k[a];if(oe(r,o)?n.a[o]:c[o](e))return void _t(t,o,e,n)}_t(t,'__',e,n)}),1)]}else r(0,'expect match to be unit, function or object');const S=a({meta:{op:n},parent:s?[]:i,scope:o,node:w,family:{owners:Array.from(v)},regional:1});if(s&&qt(n,s,i,null,S,null,n,u,0,0,0),!h)return o}function C(e,{scope:t,params:r}={}){if(!Q(e))return Promise.reject(new Error('first argument should be unit'));if(!(ee(e)||Z(e)||Y(e)||ne(e)))return Promise.reject(new Error('first argument accepts only effects, events, stores or scopes'));if(ne(e))t=e;else if(!te(e)){const t=l('allSettled',E(e).meta);return Promise.reject(Error(`${t}: unit should be targetable`))}const n=y();n.parentFork=et;const{fxCount:a}=t;ie(a.scope.defers,n);const s=[],i=[];return ne(e)||(ie(s,e),ie(i,ee(e)?{params:r,req:{rs(e){n.value={status:'done',value:e}},rj(e){n.value={status:'fail',value:e}}}}:r)),ie(s,a),ie(i,null),o({target:s,params:i,scope:t}),n.req}function N(e,r,n){const a=[];(function e(o){oe(a,o)||(ie(a,o),\"store\"===G(o,'op')&&(n||G(o,'sid'))&&r(o,G(o,'sid')),t(o.next,e),t(V(o),e),t(T(o),e))})(e)}function I(e,n){const a=Array.isArray(e)?new Map(e):e,o=new Map;let s=0;if(a instanceof Map){const e={};return t(a,((t,a)=>{r(Q(a),'Map key should be a unit'),n&&n(a,t),a.sid&&(a.sid in e&&(s=1),e[a.sid]=t),o.set(a,t)})),{sidMap:e,unitMap:o,hasSidDoubles:s}}return{sidMap:a,unitMap:o}}function O(e,n){let o,s=e;re(e)&&(ce(0,'fork(domain)','fork()'),o=e,s=n);const i=(e=>{const r=a({scope:{defers:[],inFlight:0,fxID:0},node:[_e(((e,t,r)=>{r.parent?'dec'===r.parent.node.meta.needFxCounter?t.inFlight-=1:(t.inFlight+=1,t.fxID+=1):t.fxID+=1})),De({priority:\"sampler\",batch:1}),_e(((e,r)=>{const{defers:n,fxID:a}=r;r.inFlight>0||0===n.length||Promise.resolve().then((()=>{r.fxID===a&&t(n.splice(0,n.length),(e=>{ot(e.parentFork),e.rs(e.value)}))}))}),0,1)]}),n=a({node:[_e(((e,t,r)=>{const n=r.parent;if(n){const t=n.node;if(Vt(n)){const n=U(r),a=t.meta.sid;n.sidIdMap[a]=t.scope.state.id,n.values.sidMap[a]=e;const o=t.meta.serialize;o&&n.sidSerializeSettings.set(a,'ignore'===o?{ignore:1}:{ignore:0,write:o.write})}}}))]}),o=a({node:[_e(((e,t,r)=>{const n=U(r);n&&r.parent&&Vt(r.parent)&&(n.warnSerialize=1)}))]}),s={cloneOf:e,reg:{},values:{sidMap:{},idMap:{}},sidIdMap:{},sidSerializeSettings:new Map,getState(e){if('current'in e)return lt(at,s,e,0).current;const t=E(e);return lt(at,s,t.scope.state,1).current},kind:\"scope\",graphite:a({family:{type:\"domain\",links:[r,n,o]},meta:{unit:'fork'},scope:{forkInFlightCounter:r}}),additionalLinks:{},handlers:{sidMap:{},unitMap:new Map},fxCount:r,storeChange:n,warnSerializeNode:o};return s})(o);if(s){if(s.values){const{sidMap:e,unitMap:n,hasSidDoubles:a}=I(s.values,(e=>r(Y(e)&&te(e),'Values map can contain only writable stores as keys')));Object.assign(i.values.sidMap,e),t(n,((e,t)=>{if(i.values.idMap[t.stateRef.id]=e,i.sidIdMap[G(t,'sid')]=t.stateRef.id,'ignore'===G(t,'serialize')){const e=G(t,'sid');i.sidSerializeSettings.set(e,{ignore:1})}})),i.fromSerialize=!(Array.isArray(s.values)||s.values instanceof Map),i.hasSidDoubles=a}s.handlers&&(ce(s.handlers instanceof Map||Array.isArray(s.handlers),'object with handlers','array'),i.handlers=I(s.handlers,(e=>r(ee(e),\"Handlers map can contain only effects as keys\"))))}return i}function R(e,{values:n}){r($e(n),'values property should be an object');const{sidMap:a,unitMap:s}=I(n),i=Object.getOwnPropertyNames(a),c={};t(s,((e,t)=>{c[t.stateRef.id]=t}));const l=[],d=[];let u,f,p;ne(e)?(u=e,p=1,r(u.cloneOf,'scope should be created from domain'),ce(0,'hydrate(fork(domain), { values })','fork({ values })'),f=E(u.cloneOf)):re(e)?(ce(0,'hydrate(domain, { values })','fork({ values })'),f=E(e)):r(0,'first argument of hydrate should be domain or scope'),N(f,((e,t)=>{if(t&&oe(i,t)){ie(l,e);const r=G(e,'serialize');r&&'ignore'!==r&&(a[t]=r.read(a[t])),ie(d,a[t])}else e.scope.state.id in c&&(ie(l,e),ie(d,s.get(c[e.scope.state.id])))}),1),o({target:l,params:d,scope:u}),p&&Object.assign(u.values.sidMap,a)}function F(e,{scope:t,safe:n}={}){r(t||et||n,'scopeBind: scope not found');const a=t||et;return t=>{function r(){ot(s)}let n,o=0;const s=et;ot(a);try{n=e(t)}catch(e){n=e,o=1}if(r(),o)throw n;return n instanceof Promise&&n.then(r,r),n}}function q(t,n={}){t.warnSerialize&&console.error('There is a store without sid in this scope, its value is omitted'),r(!t.hasSidDoubles,'duplicate sid found in this scope');const a=n.ignore?n.ignore.map((({sid:e})=>e)):[],o={};return e(t.values.sidMap,((e,r)=>{var n;if(oe(a,r))return;const s=t.sidIdMap[r],i=null!==(n=t.sidSerializeSettings.get(r))&&void 0!==n?n:{ignore:0,write:Tt};i.ignore||(o[r]=(0,i.write)(s&&s in t.reg?t.reg[s].current:e))})),'onlyChanges'in n&&(ce(0,'onlyChanges'),n.onlyChanges||(r(t.cloneOf,'scope should be created from domain'),N(E(t.cloneOf),((e,r)=>{r in o||oe(a,r)||G(e,'isCombine')||'ignore'===G(e,'serialize')||(o[r]=t.getState(e))})))),o}function D({unit:e,fn:t,scope:r,batch:n}){const o=[Te.run({fn:e=>t(e)})];n&&o.unshift(Te.compute({priority:'sampler',batch:1})),Y(e)&&o.unshift(Te.mov({store:e.stateRef,to:'stack'}));const s=Array.isArray(e)?e:[e];if(r){const e=[],t=r.additionalLinks;return s.forEach((r=>{const n=t[r.graphite.id]||[];t[r.graphite.id]=n;const s=a({node:P(o,r),meta:{watchOp:r.kind}});n.push(s),e.push((()=>{const e=n.indexOf(s);-1!==e&&n.splice(e,1),vt(s)}))})),u((()=>{e.forEach((e=>e()))}))}{const e=a({node:o,parent:s,family:{owners:s}});return u((()=>{vt(e)}))}}function P(e,t){return Y(t)?[Te.mov({store:t.stateRef,to:'stack'}),...e]:e}const _='undefined'!=typeof Symbol&&Symbol.observable||'@@observable',E=e=>e.graphite||e,V=e=>e.family.owners,T=e=>e.family.links,L=e=>e.stateRef,B=e=>e.value,W=e=>e.subscribers,H=e=>e.parent,U=e=>e.scope,G=(e,t)=>E(e).meta[t],J=(e,t,r)=>E(e).meta[t]=r,K=e=>e.compositeName,Q=e=>(Me(e)||$e(e))&&'kind'in e,X=e=>t=>Q(t)&&t.kind===e,Y=X(\"store\"),Z=X(\"event\"),ee=X(\"effect\"),te=e=>Q(e)&&!!e.targetable,re=X(\"domain\"),ne=X(\"scope\");var ae={__proto__:null,unit:Q,store:Y,event:Z,effect:ee,targetable:te,domain:re,scope:ne,attached:e=>ee(e)&&1==G(e,'attached')};const oe=(e,t)=>e.includes(t),se=(e,t)=>{const r=e.indexOf(t);-1!==r&&e.splice(r,1)},ie=(e,t)=>e.push(t),ce=(e,t,r,n)=>!e&&console.error(`${n?n+': ':''}${t} is deprecated${r?`, use ${r} instead`:''}`),le=()=>{let e=0;return()=>\"\"+ ++e},de=le(),ue=le(),fe=le(),pe=le();let me;const he=e=>{me=e};let ge=null;const ye=e=>{me&&me(e,ge)},be=()=>ge&&ge.template,ve=e=>(e&&ge&&ge.sidRoot&&(e=`${ge.sidRoot}|${e}`),e),ke=({sid:e,name:t,loc:r,method:o,fn:s})=>n(a({meta:{sidRoot:ve(e),sid:e,name:t,loc:r,method:o,type:'factory'}}),s),we=(e,r)=>{const n=E(e);t(r,(e=>{const t=E(e);\"domain\"!==n.family.type&&(t.family.type=\"crosslink\"),ie(V(t),n),ie(T(n),t)}))},Se=(e=[])=>(Array.isArray(e)?e:[e]).flat().map(E),$e=e=>'object'==typeof e&&null!==e,Me=e=>'function'==typeof e,xe=e=>void 0===e,ze=e=>r($e(e)||Me(e),'expect first argument be an object'),Ae=(e,t,n,a)=>r(!(!$e(e)&&!Me(e)||!('family'in e)&&!('graphite'in e)),`${t}: expect ${n} to be a unit (store, event or effect)${a}`),je=(e,r,n)=>{Array.isArray(e)?t(e,((e,t)=>Ae(e,r,`${t} item of ${n}`,''))):Ae(e,r,n,' or array of units')},Ce=(e,n,a=\"target\")=>t(Se(n),(t=>r(!G(t,'derived'),`${e}: derived unit in \"${a}\" is not supported, use createStore/createEvent instead\"`))),Ne=(e,{fn:t},{a:r})=>t(e,r),Ie=(e,{fn:t},{a:r})=>t(r,e),Oe=(e,{fn:t})=>t(e),Re=(e,t,r,n)=>{const a={id:ue(),type:e,data:t};return r&&(a.order={priority:r},n&&(a.order.barrierID=++Fe)),a};let Fe=0;const qe=({from:e=\"store\",store:t,target:r,to:n=(r?\"store\":\"stack\"),batch:a,priority:o})=>Re('mov',{from:e,store:t,to:n,target:r},o,a),De=({fn:e,batch:t,priority:r,safe:n=0,filter:a=0,pure:o=0})=>Re('compute',{fn:e,safe:n,filter:a,pure:o},r,t),Pe=({fn:e})=>De({fn:e,priority:\"effect\"}),_e=(e,t,r)=>De({fn:e,safe:1,filter:t,priority:r&&\"effect\"}),Ee=(e,t,r)=>qe({store:e,to:t?\"stack\":\"a\",priority:r&&\"sampler\",batch:1}),Ve=(e=Oe,t)=>De({fn:e,pure:1,filter:t}),Te={mov:qe,compute:De,filter:({fn:e,pure:t})=>De({fn:e,filter:1,pure:t}),run:Pe},Le=e=>({id:ue(),current:e,initial:e}),Be=({current:e})=>e,We=(e,t)=>{e.before||(e.before=[]),ie(e.before,t)};let He=null;const Ue=(e,t)=>{if(!e)return t;if(!t)return e;let r;return(e.v.type===t.v.type&&e.v.id>t.v.id||Ye(e.v.type)>Ye(t.v.type))&&(r=e,e=t,t=r),r=Ue(e.r,t),e.r=e.l,e.l=r,e},Ge=[];let Je=0;for(;Je<6;)ie(Ge,{first:null,last:null,size:0}),Je+=1;const Ke=()=>{for(let e=0;e<6;e++){const t=Ge[e];if(t.size>0){if(3===e||4===e){t.size-=1;const e=He.v;return He=Ue(He.l,He.r),e}1===t.size&&(t.last=null);const r=t.first;return t.first=r.r,t.size-=1,r.v}}},Qe=(e,t,r,n,a,o,s)=>Xe(0,{a:null,b:null,node:r,parent:n,value:a,page:t,scope:o,meta:s},e,0),Xe=(e,t,r,n)=>{const a=Ye(r),o=Ge[a],s={v:{idx:e,stack:t,type:r,id:n},l:null,r:null};3===a||4===a?He=Ue(He,s):(0===o.size?o.first=s:o.last.r=s,o.last=s),o.size+=1},Ye=e=>{switch(e){case'child':return 0;case'pure':return 1;case'read':return 2;case'barrier':return 3;case'sampler':return 4;case'effect':return 5;default:return-1}},Ze=new Set;let et,tt=1,rt=0,nt=0,at=null;const ot=e=>{et=e},st=e=>{at=e},ct=(e,t)=>{if(e){for(;e&&!e.reg[t];)e=e.parent;if(e)return e}return null},lt=(e,t,r,n)=>{const a=ct(e,r.id);return a?a.reg[r.id]:t?(pt(t,r,n),t.reg[r.id]):r};let dt;const ut=e=>{dt=e},ft=e=>e,pt=(e,r,n,a,o)=>{const s=e.reg;if(s[r.id])return;const i=r.sid,c={id:r.id,current:r.initial,meta:r.meta};if(c.id in e.values.idMap)c.current=e.values.idMap[c.id];else if(i&&i in e.values.sidMap&&!(i in e.sidIdMap)){var l;const t=null==r||null===(l=r.meta)||void 0===l?void 0:l.serialize;c.current=(e.fromSerialize&&'ignore'!==t&&(null==t?void 0:t.read)||ft)(e.values.sidMap[i])}else if(r.before&&!o){let o=0;const i=n||!r.noInit||a;t(r.before,(t=>{switch(t.type){case'map':{const r=t.from;if((r||t.fn)&&(r&&pt(e,r,n,a),i)){const e=r&&s[r.id].current;c.current=t.fn?t.fn(e):e}break}case'field':pt(e,t.from,n,a),o||(o=1,c.current=Array.isArray(c.current)?[...c.current]:{...c.current}),i&&(c.current[t.field]=s[s[t.from.id].id].current)}}))}i&&(e.sidIdMap[i]=r.id),s[r.id]=c},mt=(e,t,r)=>{try{return t(B(r),e.scope,r)}catch(t){console.error(t),e.fail=1,e.failReason=t}},ht=(t,r={})=>($e(t)&&(ht(t.or,r),e(t,((e,t)=>{xe(e)||'or'===t||'and'===t||(r[t]=e)})),ht(t.and,r)),r),gt=(e,t)=>{se(e.next,t),se(V(e),t),se(T(e),t)},yt=(e,t,r)=>{let n;e.next.length=0,e.seq.length=0,e.scope=null;let a=T(e);for(;n=a.pop();)gt(n,e),(t||r&&'sample'!==e.meta.op||\"crosslink\"===n.family.type)&&yt(n,t,'on'!==n.meta.op&&r);for(a=V(e);n=a.pop();)gt(n,e),r&&\"crosslink\"===n.family.type&&yt(n,t,'on'!==n.meta.op&&r)},bt=e=>e.clear(),vt=(e,{deep:t}={})=>{let r=0;if(e.ownerSet&&e.ownerSet.delete(e),Y(e))bt(W(e));else if(re(e)){r=1;const t=e.history;bt(t.events),bt(t.effects),bt(t.stores),bt(t.domains)}yt(E(e),!!t,r)},kt=e=>u((()=>vt(e))),wt=(e,t,r,n,o)=>a({node:r,parent:e,child:t,scope:{fn:o},meta:{op:n},family:{owners:[e,t],links:t},regional:1}),St=e=>{const t='forward',[{from:r,to:n},o]=d(e,1),s=l(t,o);return ce(0,t,'sample',s),je(r,s,'\"from\"'),je(n,s,'\"to\"'),Ce(s,n,'to'),kt(a({parent:r,child:n,meta:{op:t,config:o},family:{},regional:1}))},$t=(e,t)=>(r(Me(t),'.watch argument should be a function'),kt(a({scope:{fn:t},node:[Pe({fn:Oe})],parent:e,meta:{op:'watch'},family:{owners:e},regional:1}))),Mt=(e,t,r=\"event\")=>{H(e)&&H(e).hooks[r](t)},xt=(e,t,r)=>{const n=ht(r),a=\"domain\"===e,o=de(),{sid:s=null,named:i=null,domain:l=null,parent:d=l}=n,u=i||n.name||(a?'':o),f=c(u,d),p={op:t.kind=e,name:t.shortName=u,sid:t.sid=ve(s),named:i,unitId:t.id=o,serialize:n.serialize,derived:n.derived,config:n};if(t.targetable=!n.derived,t.parent=d,t.compositeName=f,t.defaultConfig=n,t.getType=()=>(ce(0,'getType','compositeName.fullName'),f.fullName),!a){t.subscribe=e=>(ze(e),t.watch(Me(e)?e:t=>e.next&&e.next(t))),t[_]=()=>t;const e=be();e&&(p.nativeTemplate=e)}return p},zt=(e,t,r,n)=>{let a;$e(r)&&(a=r,r=r.fn);const o=p({name:`${e.shortName} \\u2192 *`,derived:1,and:a});return wt(e,o,n,t,r),o},At='undefined is used to skip updates. To allow undefined as a value provide explicit { skipVoid: false } option',jt=(e,t,r,n,a)=>{const o=L(t),s=qe({store:o,to:\"a\",priority:'read'});\"map\"===r&&(s.data.softRead=1);const i=[s,Ve(n)];return f('storeOnMap',o,i,Y(e)&&L(e)),wt(e,t,i,r,a)},Ct=(t,n,a,o,i,c)=>{const d=l('combine',o),u=t?e=>[...e]:e=>({...e}),p=t?[]:{},m=u(p),g=Le(m),y=Le(1);g.type=t?'list':'shape',g.noInit=1,f('combineBase',g,y);const b=h(m,{name:s(a),derived:1,...c,and:o}),v=L(b);v.noInit=1,J(b,'isCombine',1);const k=Ee(g);k.order={priority:'barrier'};const w=qe({store:v,to:'b',priority:'read'});w.data.softRead=1;const S=[_e(((e,t,r)=>(r.scope&&!r.scope.reg[g.id]&&(r.c=1),e))),k,qe({store:y,to:'b'}),_e(((e,{key:t},r)=>{if(r.c||e!==r.a[t])return n&&r.b&&(r.a=u(r.a)),r.a[t]=e,1}),1),qe({from:\"a\",target:g}),qe({from:\"value\",store:0,target:y}),qe({from:\"value\",store:1,target:y,priority:'barrier',batch:1}),Ee(g,1,1),i&&Ve(),w];if(e(a,((e,t)=>{if(!Y(e))return r(!Q(e)&&!xe(e),`combine expects a store in a field ${t}`,d),void(m[t]=p[t]=e);p[t]=e.defaultState,m[t]=e.getState();const n=wt(e,b,S,'combine',i);n.scope.key=t;const a=L(e);We(g,{type:'field',field:t,from:a}),f('combineField',a,n)})),b.defaultShape=a,We(v,{type:\"map\",from:g,fn:i}),!be())if(i){const e=i(m);!xe(e)||c&&'skipVoid'in c||console.error(`${d}: ${At}`),v.current=e,v.initial=e,b.defaultState=e}else b.defaultState=p;return b},Nt=(e,t,r)=>{try{return[1,e(...r)]}catch(e){return t(e),[0,null]}},It=(e,t,r,n,a)=>s=>{o({target:[n,Ot],params:[r?{status:'done',params:e,result:s}:{status:'fail',params:e,error:s},{value:s,fn:r?t.rs:t.rj}],defer:1,page:a.page,scope:a.scope,meta:a.meta})},Ot=a({node:[Pe({fn:({fn:e,value:t})=>e(t)})],meta:{op:'fx',fx:'sidechain'}}),Rt=['source','clock','target'],Ft=(e,t)=>e+`: ${t} should be defined`,qt=(e,t,n,a,o,s,i,c,d,u,m,y)=>{const b=l(e,c),v=!!o;r(!xe(n)||!xe(t),Ft(b,'either source or clock'));let k=0;xe(n)?k=1:Q(n)||(n=g(n)),xe(t)?t=n:(je(t,b,'clock'),Array.isArray(t)&&(t=$(t))),k&&(n=t),c||i||(i=n.shortName);let w='none';(m||a)&&(Q(a)?w='unit':(r(Me(a),'`filter` should be function or unit'),w='fn')),o?(je(o,b,'target'),Ce(b,o)):'none'===w&&u&&Y(n)&&Y(t)?o=h(s?s(Be(L(n)),Be(L(t))):Be(L(n)),{name:i,sid:y,or:c}):(o=p({name:i,derived:1,or:c}),f('sampleTarget',E(o)));const S=Le();let M=[];if('unit'===w){const[r,n,s]=Pt(a,o,t,S,e);s||M.push(...Dt(n)),M.push(...Dt(r))}const x=[];if(k)d&&x.push(Ee(S,1,1));else{const[r,a,s]=Pt(n,o,t,S,e);s||x.push(...Dt(a)),x.push(Ee(r,1,d))}const z=wt(t,o,[f('sampleSourceLoader'),qe({from:\"stack\",target:S}),...x,...M,Ee(S),'fn'===w&&Ve(((e,t,{a:r})=>a(e,r)),1),s&&Ve(Ne),f('sampleSourceUpward',v)],e,s);return we(n,[z]),Object.assign(z.meta,c,{joint:1}),o},Dt=e=>[Ee(e),_e(((e,t,{a:r})=>r),1)],Pt=(e,t,r,n,o)=>{const s=Y(e),i=s?L(e):Le(),c=Le(s);return s||a({parent:e,node:[qe({from:\"stack\",target:i}),qe({from:\"value\",store:1,target:c})],family:{owners:[e,t,r],links:t},meta:{op:o},regional:1}),f('sampleSource',c,i,n),[i,c,s]},_t=(e,t,r,n)=>{const a=e[t];a&&o({target:a,params:Array.isArray(a)?a.map((()=>r)):r,defer:1,stack:n})},Et=\"23.2.1\",Vt=e=>!e.node.meta.isCombine||e.parent&&'combine'!==e.parent.node.meta.op,Tt=e=>e;\n//# sourceMappingURL=effector.mjs.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/effector/effector.mjs\n");

/***/ })

};
;